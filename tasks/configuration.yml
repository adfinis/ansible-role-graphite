---

- name: configure carbon-cache systemd service
  copy:
    src: systemd/carbon-cache.service
    dest: /etc/systemd/system/carbon-cache.service

- name: enable carbon-cache service
  systemd:
    name: carbon-cache
    daemon_reload: yes
    enabled: yes

# @TODO This is probably not necessary, can maybe be removed
- name: make sure config folders exists
  file:
    path: "{{ item }}"
    state: directory
  loop:
    - "{{ graphite_carbon_confdir }}"
    - "{{ graphite_web_confdir }}"

- name: write config files
  template:
    src: "{{ item.src }}"
    dest: "{{ graphite_carbon_confdir }}/{{ item.dest }}"
  loop:
    - { src: 'templates/carbon/carbon.conf.j2', dest: 'carbon.conf' }
    - { src: 'templates/carbon/storage-schemas.conf.j2', dest: 'storage-schemas.conf' }
    - { src: 'templates/carbon/storage-aggregation.conf.j2', dest: 'storage-aggregation.conf' }
  notify:
    - 'restart carbon cache'

- name: write graphite-web configuration
  template:
    src: "templates/graphite-web/local_settings.py.j2"
    dest: "{{ graphite_web_confdir }}/local_settings.py"

- name: write graphite-web apache configuration
  template:
    src: "templates/graphite-web/graphite-web.conf.j2"
    dest: "{{ graphite_apache2_conf_path }}/graphite-web.conf"

- name: initialize database
  command: "{{ graphite_python_djangoadmin_executable }} migrate --settings=graphite.settings --run-syncdb"
  environment:
    PYTHONPATH: "/opt/graphite/webapp"
  register: graphite_register_db_init
  changed_when: graphite_register_db_init.stdout is not search("No migrations to apply")

- name: collect static files
  command: "{{ graphite_python_djangoadmin_executable }} collectstatic --settings=graphite.settings"
  environment:
    PYTHONPATH: "/opt/graphite/webapp"
  args:
    creates: "{{ graphite_web_staticdir }}"

- name: configure mod-wsgi with python3
  shell: "mod_wsgi-express install-module > {{ graphite_apache2_mods_path }}/02-wsgi.conf"
  args:
    creates: "{{ graphite_apache2_mods_path }}/02-wsgi.conf"
